@inject SignInManager<ApplicationUser> signInManager;

@model Advertisement

@{
    ViewBag.Title = "View Advertisement";
}

@{
    var photoPath = "/Images/" + (Model.PhotoPath ?? "noimage.jpg");
    string fullMonthName = new DateTime(2015, Model.ProductionMonth != 0 ? Model.ProductionMonth : 1, 1).ToString("MMMM", CultureInfo.CreateSpecificCulture("en-GB"));

    <div class="container">
        <br>
        <div class="row">
            <div class="col-md-9 col-xs-12 ad-nav">
                @if (signInManager.IsSignedIn(User))
                {
                    <button id="FavoriteThis" style="display: none;"> Favorite This ❤️</button>
                    <button id="Unfavorite"  style="display: none;"> Unfavorite </button>

                }
                <button> Report 🚩</button>
                <button> Edit ⚙️</button>
                <!-- TODO Show this when advertisements is favorited -->
                <!-- <button> Favorite ✔️</button> -->
            </div>
            <div class="col-md-3 col-xs-12">

                <!-- TODO -->
                <!-- Advertisement creation date -->
                <p class="align-right">@Model.CreationDate</p>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h1>@Model.Brand.Name @Model.Model.Name</h1>
            </div>
            <div class="col">
                <h1 class="align-right">@Model.Price EUR</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 image-col">
                <img class="image-viewad" src="@photoPath"> </img>
            </div>
            <div class="col-md-6 motorcycle-description">
                <ul>
                    <li>Category: @Model.Category</li>
                    <li>Production year: @Model.ProductionYear @fullMonthName</li>
                    <li>Engine type: @Model.EngineType</li>
                    <li>Horse Power: @Model.HorsePower hp</li>
                    <li>Engine Capacity: @Model.EngineCapacity cc</li>
                    <li>Transmission Type: @Model.TransmissionType</li>
                    <li>Cooling System: @Model.CoolingSystemType</li>
                    <li>Mileage: @Model.Mileage Km</li>

                </ul>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <!-- TODO Add advrtisement creation date initialize it when ad is inserted to database -->
                <!-- Advertisement creation date -->
                <br>
                <h5> Additional Description:</h5>
                <p> @Model.Description</p>
            </div>
        </div>
    </div>
}

@section Scripts
{
<script type="text/javascript">

$(function() {
    $("#FavoriteThis").click(function() {

        let advertisement = @Html.Raw(Json.Serialize(Model.Id));
        console.log(advertisement)
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddAdvertisementToFavorite")',
            data: {
                advertisementid: advertisement,
                add: true
            },
            success: function(response) {
                UpdateFavoriteButton();
            },
            failure: function(response) {
                alert(response.responseText);
            },
            error: function(response) {
                alert(response.responseText);
            }
        });
    });

     $("#Unfavorite").click(function() {

        let advertisement = @Html.Raw(Json.Serialize(Model.Id));
        console.log(advertisement)
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddAdvertisementToFavorite")',
            data: {
                advertisementid: advertisement,
                add: false
            },
            success: function(response) {
                UpdateFavoriteButton();
            },
            failure: function(response) {
                alert(response.responseText);
            },
            error: function(response) {
                alert(response.responseText);
            }
        });
    });
});

function UpdateFavoriteButton() {


   // var selectedBrand = $("#Brands").val();
  // console.log(selectedBrand)
    let advertisement = @Html.Raw(Json.Serialize(Model.Id));
    $.ajax({
        type: 'GET',
        url: '@Url.Action("IsFavorite")',
        dataType: 'json',
        data: {
            advertisementId: advertisement
        },
        success: function(mems) {
            //$("#Models").append('<option value=""></option>');
            //$.each(mems, function(i, member) {
            //    console.log(member)
            //    $("#Models").append('<option value="' +
            //        member.value + '">' +
            //        member.text + '</option>');
            //});
            console.log(mems)
            if (mems == true){
                $("#FavoriteThis").hide();
                $("#Unfavorite").show();
            }else{
                $("#FavoriteThis").show();
                $("#Unfavorite").hide();
            }
            console.log($("FavoriteThis").get())
        },
        error: function(ex) {
            console.log("error")
            alert('Failed to retrieve models.' + ex);
        }
    });
    }

    $(document).ready(function() {

        console.log("update button")
        UpdateFavoriteButton();
    });
</script>
}