@using motorcycle_sales.Core.Entities.AdvertisementAggregate
@model CreateAdvertisementViewModel


@{
    ViewBag.Title = "Create Advertisement";
}


<form method="post" enctype="multipart/form-data">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="row">
        <div class="col-lg-6">
            <div class="row">
                <div class="form-group col-sm">
                    @Html.LabelFor(x => Model.BrandId)
                    @Html.DropDownListFor(x => Model.BrandId, Model.Brands, htmlAttributes: new { @class = "form-control", id = "Brands" })
                    @Html.ValidationMessageFor(x => x.BrandId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-sm">
                    @Html.LabelFor(x => Model.ModelId)
                    @Html.DropDownListFor(x => Model.ModelId, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control", id = "Models" })
                    @Html.ValidationMessageFor(x => x.ModelId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    <label asp-for="Modification"></label>
                    <input class="form-control" asp-for="Modification" type="text"></input>
                    <span asp-validation-for="Modification" class="text-danger"></span>
                </div>
                <div class="form-group col-sm">
                    @Html.LabelFor(x => Model.Category)
                    @Html.DropDownListFor(x => Model.Category, Html.GetEnumSelectList(typeof(Category)), htmlAttributes: new { @class = "form-control", id = "Category" })
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Price"></label>
                <input class="form-control" asp-for="Price" type="text"></input>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Mileage"></label>
                <input class="form-control" asp-for="Mileage" type="text"></input>
                <span asp-validation-for="Mileage" class="text-danger"></span>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => Model.EngineType)
                @Html.DropDownListFor(x => Model.EngineType, Html.GetEnumSelectList(typeof(EngineType)), htmlAttributes: new { @class = "form-control", id = "EngineTypes" })
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    <label asp-for="HorsePower"></label>
                    <input class="form-control" asp-for="HorsePower" type="text"></input>
                    <span asp-validation-for="HorsePower" class="text-danger"></span>
                </div>
                <div class="form-group col-sm">
                    <label asp-for="EngineCapacity"></label>
                    <input class="form-control" asp-for="EngineCapacity" type="text"></input>
                    <span asp-validation-for="EngineCapacity" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    @Html.LabelFor(x => Model.TransmissionType)
                    @Html.DropDownListFor(x => Model.TransmissionType, Html.GetEnumSelectList(typeof(TransmissionType)), htmlAttributes: new { @class = "form-control", id = "EngineTypes" })
                </div>
                <div class="form-group col-sm">
                    @Html.LabelFor(x => Model.CoolingSystemType)
                    @Html.DropDownListFor(x => Model.CoolingSystemType, Html.GetEnumSelectList(typeof(CoolingSystemType)), htmlAttributes: new { @class = "form-control", id = "EngineTypes" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    @Html.LabelFor(x => Model.ProductionYear)
                    @Html.DropDownListFor(x => Model.ProductionYear, Model.Years, htmlAttributes: new { @class = "form-control"})
                    @Html.ValidationMessageFor(x => x.ProductionYear, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-sm">
                    @Html.LabelFor(x => Model.Month)
                    @Html.DropDownListFor(x => Model.Month, Model.Months, htmlAttributes: new { @class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Month, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group row" style="padding-top: 10px">
                <label asp-for="Photo" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <div class="custom-file">
                        <input asp-for="Photo" class="form-control custom-file-input" id="fuImage" onchange="showPreview(event);">
                    </div>
                </div>
            </div>
            <div class="img-preview">
                <img id="file-ip-1-preview" class="cover">
            </div>
            <div class="form-group">
                <label asp-for="Description"></label>
                <textarea class="form-control" asp-for="Description" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-primary" style="width: 100%">Create</button>
</form>

@section Scripts {

<script language="javascript" type="text/javascript">
    function showPreview(event){
        console.log("image")
        if(event.target.files.length > 0){
            var src = URL.createObjectURL(event.target.files[0]);
            var preview = document.getElementById("file-ip-1-preview");
            console.log(src)
            preview.src = src;
            preview.style.display = "block";
        }
    }
</script>

<script type="text/javascript">
    console.log("test")
    $(document).ready(function () {
        $("#Brands").change(function () {
            var selectedBrand = $("#Brands").val();
            console.log(selectedBrand)
            $("#Models").empty();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetModels")',
                    dataType: 'json',
                    data: { id: selectedBrand },
                    success: function (mems) {
                        $.each(mems, function (i, member) {
                            console.log(member)
                            $("#Models").append('<option value="'
                            + member.value + '">'
                            + member.text + '</option>');
                        });
                    },
                    error: function (ex) {
                        console.log("error")
                        alert('Failed to retrieve models.' + ex);
                    }
                });
                return false;
        })
        $("#Brands").val(0);
    });
</script>
}